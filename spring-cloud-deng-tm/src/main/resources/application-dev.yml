server:
  # 服务端口
  port: 9005

#------------------- Tomcat config Start ---------------------
  tomcat:
    # Tomcat维护最大的对列数
    accept-count: 200
    # Tomcat线程池最多能起的线程数
    max-threads: 200
    # （连接） /  服务器将在任何给定时间接受和处理的最大连接数
    max-connections: 1500
    #worker线程的最小数量
    min-spare-threads: 10
#------------------- Tomcat config End ---------------------

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/deng-tm?autoReconnect=true&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false
    username: root
    password: root
  #------------------- redis config Begin ---------------------
  redis:
    # Redis服务器地址
    host: 121.4.237.128
    # Redis服务器连接端口
    port: 9111
    # Redis服务器连接密码（默认为空）
    password:
    # Redis数据库索引（默认为0）
    timeout: 1000
    pool:
      # 连接池最大连接数（使用负值表示没有限制）
      maxTotal: 100
      # 连接池中的最大空闲连接
      # maxIdle: 8
      # 连接超时时间（毫秒）当池内没有返回对象时最大等待时间
      maxWaitMillis: 300000
      # 连接池中的最小空闲连接
      # minIdle: 0
      # 空闲连接多长时间后会被收回
      minEvictableIdleTimeMillis: 300000
      # 一次最多evict的pool里的jedis实例个数
      numTestsPerEvictionRun: 5
      # 多长时间检查一次连接池中空闲的连接
      timeBetweenEvictionRunsMillis: 300000
      # 当调用borrow Object方法时，是否进行有效性检查
      testOnBorrow: true
      # 当调用return Object方法时，是否进行有效性检查
      testOnReturn: true
      #空闲时是否进行验证，检查对象是否有效
      testWhileIdle: true
    jedis:
      pool:
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0
  #------------------- redis config End ---------------------

logging:
  level:
    com:
      codingapi=debug: debug


####################### 分布式事务 start ############################################
tx-lcn:
  manager:
    # TM监听IP. 默认为 127.0.0.1
    host: 127.0.0.1
    # TM监听Socket端口. 默认为 ${server.port} - 100
    port: 8070
    # 心跳检测时间(ms). 默认为 300000
    # 心heart: 300000
    #心跳检测时间(ms)
    heart-time: 15000
    # 分布式事务执行总时间(ms). 默认为36000
    dtx-time: 600000
    # 事务处理并发等级. 默认为机器逻辑核心数5倍
    concurrent-level: 128
    # TM后台登陆密码，默认值为codingapi
    admin-key: 123456
    # 分布式事务锁超时时间 默认为-1，当-1时会用tx-lcn.manager.dtx-time的时间
    dtx-lock-time: ${tx-lcn.manager.dtx-time}
    # 雪花算法的sequence位长度，默认为12位
    seq-len: 12
    # 异常回调开关。开启时请制定ex-url
    ex-url-enabled: false
    # 事务异常通知（任何http协议地址。未指定协议时，为TM提供内置功能接口）。默认是邮件通知
    ex-url: /provider/email-to/454047760@qq.com
  message:
    netty:
      # 参数延迟删除时间单位ms  默认为dtx-time值
      attr-delay-time: 10000
  logger:
    # 开启日志,默认为false
    enabled: true
    driver-class-name: ${spring.datasource.driver-class-name}
    jdbc-url: ${spring.datasource.url}
    username: ${spring.datasource.username}
    password: ${spring.datasource.password}

####################### 分布式事务 end ############################################